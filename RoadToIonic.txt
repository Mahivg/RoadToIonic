Ionic with Angular: 

	html, css, JS => web development => Browser => Browser Engine ( Chrome v8 ), 
	
	
	
	Datatypes
	
	functions
	
	iteration
	
	
	Javascript: 
	
		-> Language of browser
		
		-> User Interaction
		
		-> NodeJS => MEAN => MongoDB, ExpressJS, Angular, NodeJS
					 MERN => MongoDB, ExpressJS, ReactJS, NodeJS
					 
		-> browser console 
		
			window, document
			
		-> type less or dynamic type programimng language
		
		
		-> Javascript language following ECMA Specification pattern (ECMA => European Computer manufacturar assocition)
			
		
	DataTypes:
	
		number => 12, 1.2, -10, 
		
		string => "text", 'textt', `Text
			skbkdfds
			nksdfndsjds `
			
		boolean => true, false
		
		object => { "key" : "value" }
		
		json => { "key" : : "value" }
		
		Array => [1,2,3]
		
	 Variable Declaration:
	 
	 
		var, let, const
		
		var myStr = "test";
		
		let myStr = "test";
		
		const myStr = "test";
		
		
		1. should not start with _ || number 
		
		2. camelCase
		
			myName, getMyName()
			
		3. meaningful
		
		4. should not contain any space
		
		
			var my name = "";
		
		
		
		{
			let myStr = ""'
		}
		
		
		
		Array Funcitons :
		
			map => convert array into another array
			
			filter => based on condition		
		
			forEach =>
			
			findIndex => 
			
			find =>
			
		
		Cosntional statment:
		
		
		if(booelan || condition to return boolean) {
			
			
			
		}
		
		else if () {
		
		}
		
		else {
		
		}
			
		Relational Operators:
			==, <, >, <= , >= , ===
			
			
			
		Function:
		
			1990 => ES3, ES4, 
			
			2015 => ES5, ES2015
			
			2016 => ES6 ( => Lambda )
			
			
		
		UserInteraction:
		
		
			document => getElementById, getElementsByClassName, getElementsByTagName
			
						querySelector, querySelectorAll
						
	
	
		backEnd app
		
			Java, python
			
				RestFul API => 'https://www.domain.com/v1/employees' ('GET' , 'POST' , 'PUT', 'DELETE')
				
					=> Request -> GET(--), POST (ADD) || PUT (UPDATE) (obj)
					
					=> Response -> Response
				
		
		XMLHttpRequest
			- 
			
	
	
		DisAdv JS:
		
			1. Typeless | Dynamic typing
			
			2. addtional code
			
		Google => AngualrJS (Angualr1) => javascript
		
		Angular 2 -> 9 => Typscript
		
			
			1. Typed Language
			
			2. Compile time error
			
			3.  Typescript script => JS
			
			
			function login(userName, password) { }
			
			
			function login(userName: string, password:string){}
		
	
	
	 Typescript:
	 
		1. superset of javascript
		
		2. Types => Typed Javasript
		
		3. OOPS
		
		4. Compiler
		
		5. compile time error
		
		
	Environment Setup:
	
		1. NodeJS
			
			node and npm 
			
				node
				
				npm => bootstrap 
				
				npm i bootstrap 
				
				node_modules
				
					bootstrap
						dist						
						css
						js
						
				package.json
				
				{					
				
					"dependencies" : {
					
						"bootstrap" : "^4.0.0"
					}
					
				}
				
		2. Typescirpt
			
			npm install -g typescript
			
			
			1. my-scirpt.ts
			
				tsc my-scirpt.ts => my-scirpt.js
				
				tsc --init
				
				
				
				
			DataTypes:
			
				number string, boolean, objeect, Array, Tuple, Union, enum, class
				
				
		
		
		Angular
			
			tsconfig.json
			package.json
			
		
		
		VS code extension:			
			ESLint
			Prettier
			Debugger for chrome
			Path intelisense
			Material Icon Theme
			Dracula theme
			
			
			
			
		Angualr Framework



			module:
			
				shopping- list => list out
				
				shpoing-detail-view =>
				
				
				shopping.module => [shopping-list, shopping-detail]
				
				
				shopping.module
				
			Form => 
			
				Angular FormsModule  => 
				
						HttpModule =>
				
				
				App Module => [ FormsModule ]
		
		
			Webpack
			
				Budling => JS, CSS
				
			
			History: 
			
				Google
					Angular => Angular Material 
				
					JS => 
					
						jQuery 
						
							document.getElementById('userName') => $('userName')
							
							
						
					AngularJS ( Angualr 1.x )
					
						SPA => one root Html => remaining partial HTML
					
						Model, view, Controller => PAttern
						
						Shopping 
						
							List => feature => HTML, CSS, JS
							
								shopping-list.html => 
								shopping-list.css => View
								shopping-list.js => Controller
								
									Product => modal
									
									
					AngularJS + Typescirpt 
					
						Angualr ( 2 to 9 )
						
						
							Advanced MVC pattern => Component || widgets
							
							one component => HTML, CSS, TS
								
								shopping-list.html => 
								shopping-list.css => View
								shopping-list.ts => Controller
								
					Html
					
						header | navbar => header.component
						
						homepage => homepage.component						
						
						footer => footer.component
						
						
					h1, h2 => predifined HTML tag
					
					<app-root></app-root>
						shopping-list.html =>  <div> Test </div>
						shopping-list.css => View
						shopping-list.ts => Controller => selector : "app-root"
						
						shopping-list.spec.ts =>
						
						
					Routing
					
						SPA
						
							index.html
							
								based on url change, if content change means that is routing
								
								<app-detail>
								
					
				
				
				
		
			package.json
			
			scripts: {
				build : "npm install build"
			},
			
				dependenciies : {
				
				
				}
				
			Environment:
			
				
				tsc
				
				ng
				
				npm install -g @angular/cli
				
				npm uninstall -g @angular/cli
				
				npm install -g @angular/cli@latest


		Angular
			
			Component
				Angular 1 -> Angular 2
				
				Angular 2 -> 9
				
					JIT compiler => Just In Time Compiler 4
					
					6 => AOT compiler => AheadOf Time Compiler
					
					9 => Ivy compiler
					
				Angualr 2 -> 9 => backward compatibilty
				
		UI Framework:
		
			desktop => Mobile => compatabilty
			
			bootstrap and Angualr material => CSS frameworks (set of clases) => bootstrap.min.css		|
			
			
		Testing:
		
			Karma|jasmine => unit test framework
			
			
				Test cases => to ensure application feature is working fine
				
				
				
	
			
			
		Ng | angualr CLI commands
		
		
			ng --version
			
			ng new ApplicationName --skipInstall=true --skipTests=true
			
			ng serve => starts application and runs the application in port no : 4200
			
			http://localhost:4200 => get some view
			
			ng g
			 
		
			
					
				
					
					
				
				
				
			
				
				
				
		
		
		
	
		
		
		
	 
		
	 
		
	 
			
	
			
			
		
		
		
		
	
		
	
		